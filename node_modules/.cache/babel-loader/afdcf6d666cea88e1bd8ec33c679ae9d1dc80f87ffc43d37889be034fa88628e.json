{"ast":null,"code":"import _slicedToArray from\"C:/Users/ASUS/dev/diplom/movies-explorer-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import Header from'../Header/Header';import Main from'../Main/Main';// import Footer from './Footer';\nimport EditPopup from'../EditPopup/EditPopup';// import AddPopup from './AddPopup';\n// import AvatarPopup from './AvatarPopup';\n// import DeletePopup from './DeletePopup';\nimport{useState}from'react';import'./App.css';// import ImagePopup from './ImagePopup';\nimport{CurrentUserContext}from'../contexts/CurrentUserContext';// import { api } from '../../utils/Api';\n// import Login from './Login';\nimport{Route,Switch,Redirect,useHistory}from'react-router-dom';// import { useHistory } from 'react-router-dom';\nimport ProtectedRoute from'../ProtectedRoute/ProtectedRoute';// import Register from './Register';\n// import InfoTooltip from './InfoTooltip';\n// import authApi from '../../utils/authApi';\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// const [cards, setCards] = useState([]);\n//  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n//  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n//  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n//  const [isInfoTooltipPopupOpen, setIsInfoTooltipPopupOpen] = useState(false);\n//  const [selectedCard, setSelectedCard] = useState({ name: '', link: '' });\n//  const [isImagePopupOpen, setImagePopupOpen] = useState(false);\n//  const [isDeletePopupOpen, setDeleteCardPopupOpen] = useState(false);\nvar _useState=useState({}),_useState2=_slicedToArray(_useState,2),currentUser=_useState2[0],setCurrentUser=_useState2[1];//  const [isInfoTooltipSuccess, setIsInfoTooltipSuccess] = useState(false);\nvar _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),isProfileEmail=_useState4[0],setIsProfileEmail=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isLoggedIn=_useState6[0],setIsLoggedIn=_useState6[1];var historyUse=useHistory();//  useEffect(() => {\n//     api.getUserInfo()\n//        .then((res) => {\n//           setCurrentUser(res)\n//        })\n//        .catch((err) => console.log(err))\n//  }, []);\n//  function handleCardClick(card) {\n//     setImagePopupOpen(true);\n//     setSelectedCard(card);\n//  }\n//  function handleCardDeleteClick(card) {\n//     setDeleteCardPopupOpen(true);\n//     setSelectedCard(card);\n//  }\n//  function handleEditProfileClick() {\n//     setIsEditProfilePopupOpen(true);\n//  }\n//  function handleAddPlaceClick() {\n//     setIsAddPlacePopupOpen(true);\n//  }\n//  function handleEditAvatarClick() {\n//     setIsEditAvatarPopupOpen(true);\n//  }\n//  function closeAllPopups() {\n//     setIsEditProfilePopupOpen(false);\n//     setIsAddPlacePopupOpen(false);\n//     setIsEditAvatarPopupOpen(false);\n//     setImagePopupOpen(false);\n//     setIsInfoTooltipPopupOpen(false);\n//     setDeleteCardPopupOpen(false);\n//     setSelectedCard({});\n//  }\n//  function handleUpdateUser(res) {\n//     api.changeUserInfo(res)\n//        .then((res) => {\n//           console.log(res)\n//           setCurrentUser(res);\n//           closeAllPopups();\n//        })\n//        .catch((err) => console.log(err));\n//  }\n//  function handleUpdateAvatar(res) {\n//     api.changeAvatar(res)\n//        .then((res) => {\n//           console.log(res)\n//           setCurrentUser(res);\n//           closeAllPopups();\n//        })\n//        .catch((err) => console.log(err));\n//  }\n//  function handleCardLike(card) {\n//     const isLiked = card.likes.some((i) => i._id === currentUser._id);\n//     if (!isLiked) {\n//        api.likeCard(card._id, !isLiked)\n//           .then((newCard) => {\n//              setCards((state) =>\n//                 state.map((c) => (c._id === card._id ? newCard : c))\n//              );\n//           })\n//           .catch((err) => console.log(err));\n//     } else {\n//        api.deleteLike(card._id, !isLiked)\n//           .then((newCard) => {\n//              setCards((state) =>\n//                 state.map((c) => (c._id === card._id ? newCard : c))\n//              );\n//           })\n//           .catch((err) => console.log(err));\n//     }\n//  }\n//  function handleCardDelete(card) {\n//     api\n//       .deleteCard(card._id)\n//       .then((newCard) => {\n//         const newCards = cards.filter((c) =>c._id === card._id ? \"\" : newCard\n//         );\n//         setCards(newCards);\n//         closeAllPopups();\n//       })\n//       .catch((err) => console.log(err));\n//   }\n//  useEffect(() => {\n//     api.getCards()\n//        .then((res) => {\n//           setCards(res)\n//        })\n//        .catch((err) => {\n//           console.log(err)\n//        })\n//  }, []);\n//  function handleAddPlaceSubmit(res) {\n//     api.createCard(res)\n//        .then((res) => {\n//           setCards([res, ...cards]);\n//           closeAllPopups();\n//        })\n//        .catch((err) => console.log(err));\n//  }\n//  useEffect(() => {\n//     const jwt = localStorage.getItem('jwt');\n//     if (jwt) {\n//        authApi.checkToken()\n//           .then(data => {\n//              if (data) {\n//                 setIsProfileEmail(data.email)\n//                 setIsLoggedIn(true)\n//                 historyUse.push('/');\n//                 console.log(\"Вы уже авторизованы, рады вас видеть снова\")\n//              }\n//           })\n//           .catch(error => { console.log(error) })\n//     }\n//  }, [historyUse, isLoggedIn]);\n//  function handleLoginUser(email, password) {\n//     authApi.loginUser(email, password)\n//        .then(data => {\n//           if (data.token) {\n//              setIsProfileEmail(email)\n//              setIsLoggedIn(true);\n//              localStorage.setItem('jwt', data.token);\n//              historyUse.push('/');\n//           }\n//        })\n//        .catch(error => {\n//           setIsInfoTooltipPopupOpen(true);\n//           setIsInfoTooltipSuccess(false);\n//           console.log(error)\n//        })\n//  }\n//  function handleRegisterUser(email, password) {\n//     authApi.registerUser(email, password)\n//        .then(data => {\n//           if (data) {\n//              setIsInfoTooltipSuccess(true);\n//              historyUse.push('/sign-in');\n//           }\n//        })\n//        .catch(error => {\n//           setIsInfoTooltipSuccess(false);\n//           console.log(error);\n//        })\n//        .finally(\n//           () =>\n//              setIsInfoTooltipPopupOpen(true)\n//        );\n//  }\nvar handleLogout=function handleLogout(){localStorage.removeItem('jwt');setIsProfileEmail('');setIsLoggedIn(false);historyUse.push('/sign-in');};return/*#__PURE__*/_jsx(CurrentUserContext.Provider,{value:currentUser,children:/*#__PURE__*/_jsxs(\"div\",{className:\"page\",children:[/*#__PURE__*/_jsx(Header//  isLoggedIn={isLoggedIn}\n//  isProfileEmail={isProfileEmail}\n//  onLogout={handleLogout}\n,{}),/*#__PURE__*/_jsx(Switch,{children:/*#__PURE__*/_jsx(ProtectedRoute,{exact:true,path:\"/\",isLoggedIn:isLoggedIn,component:Main// onEditProfile={handleEditProfileClick}\n// onAddPlace={handleAddPlaceClick}\n// onEditAvatar={handleEditAvatarClick}\n// onCardClick={handleCardClick}\n// cards={cards}\n// onCardLike={handleCardLike}\n// onCardDelete={handleCardDeleteClick}\n})}),/*#__PURE__*/_jsx(EditPopup,{})]})});}export default App;","map":{"version":3,"names":["Header","Main","EditPopup","useState","CurrentUserContext","Route","Switch","Redirect","useHistory","ProtectedRoute","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","currentUser","setCurrentUser","_useState3","_useState4","isProfileEmail","setIsProfileEmail","_useState5","_useState6","isLoggedIn","setIsLoggedIn","historyUse","handleLogout","localStorage","removeItem","push","Provider","value","children","className","exact","path","component"],"sources":["C:/Users/ASUS/dev/diplom/movies-explorer-frontend/src/components/App/App.js"],"sourcesContent":["import Header from '../Header/Header';\nimport Main from '../Main/Main';\n// import Footer from './Footer';\nimport EditPopup from '../EditPopup/EditPopup';\n// import AddPopup from './AddPopup';\n// import AvatarPopup from './AvatarPopup';\n// import DeletePopup from './DeletePopup';\nimport { useState } from 'react';\nimport './App.css';\n// import ImagePopup from './ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n// import { api } from '../../utils/Api';\n// import Login from './Login';\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\n// import { useHistory } from 'react-router-dom';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\n// import Register from './Register';\n// import InfoTooltip from './InfoTooltip';\n// import authApi from '../../utils/authApi';\n\nfunction App() {\n  // const [cards, setCards] = useState([]);\n  //  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  //  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  //  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  //  const [isInfoTooltipPopupOpen, setIsInfoTooltipPopupOpen] = useState(false);\n  //  const [selectedCard, setSelectedCard] = useState({ name: '', link: '' });\n  //  const [isImagePopupOpen, setImagePopupOpen] = useState(false);\n  //  const [isDeletePopupOpen, setDeleteCardPopupOpen] = useState(false);\n   const [currentUser, setCurrentUser] = useState({});\n  //  const [isInfoTooltipSuccess, setIsInfoTooltipSuccess] = useState(false);\n   const [isProfileEmail, setIsProfileEmail] = useState('')\n   const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n   const historyUse = useHistory();\n\n  //  useEffect(() => {\n  //     api.getUserInfo()\n  //        .then((res) => {\n  //           setCurrentUser(res)\n  //        })\n  //        .catch((err) => console.log(err))\n  //  }, []);\n\n  //  function handleCardClick(card) {\n  //     setImagePopupOpen(true);\n  //     setSelectedCard(card);\n  //  }\n\n  //  function handleCardDeleteClick(card) {\n  //     setDeleteCardPopupOpen(true);\n  //     setSelectedCard(card);\n  //  }\n\n  //  function handleEditProfileClick() {\n  //     setIsEditProfilePopupOpen(true);\n  //  }\n\n  //  function handleAddPlaceClick() {\n  //     setIsAddPlacePopupOpen(true);\n  //  }\n\n  //  function handleEditAvatarClick() {\n  //     setIsEditAvatarPopupOpen(true);\n  //  }\n\n  //  function closeAllPopups() {\n  //     setIsEditProfilePopupOpen(false);\n  //     setIsAddPlacePopupOpen(false);\n  //     setIsEditAvatarPopupOpen(false);\n  //     setImagePopupOpen(false);\n  //     setIsInfoTooltipPopupOpen(false);\n  //     setDeleteCardPopupOpen(false);\n  //     setSelectedCard({});\n  //  }\n\n  //  function handleUpdateUser(res) {\n  //     api.changeUserInfo(res)\n  //        .then((res) => {\n  //           console.log(res)\n  //           setCurrentUser(res);\n  //           closeAllPopups();\n  //        })\n  //        .catch((err) => console.log(err));\n  //  }\n\n  //  function handleUpdateAvatar(res) {\n  //     api.changeAvatar(res)\n  //        .then((res) => {\n  //           console.log(res)\n  //           setCurrentUser(res);\n  //           closeAllPopups();\n  //        })\n  //        .catch((err) => console.log(err));\n  //  }\n\n  //  function handleCardLike(card) {\n  //     const isLiked = card.likes.some((i) => i._id === currentUser._id);\n  //     if (!isLiked) {\n  //        api.likeCard(card._id, !isLiked)\n  //           .then((newCard) => {\n  //              setCards((state) =>\n  //                 state.map((c) => (c._id === card._id ? newCard : c))\n  //              );\n  //           })\n  //           .catch((err) => console.log(err));\n  //     } else {\n  //        api.deleteLike(card._id, !isLiked)\n  //           .then((newCard) => {\n  //              setCards((state) =>\n  //                 state.map((c) => (c._id === card._id ? newCard : c))\n  //              );\n  //           })\n  //           .catch((err) => console.log(err));\n  //     }\n  //  }\n\n  //  function handleCardDelete(card) {\n  //     api\n  //       .deleteCard(card._id)\n  //       .then((newCard) => {\n  //         const newCards = cards.filter((c) =>c._id === card._id ? \"\" : newCard\n  //         );\n  //         setCards(newCards);\n  //         closeAllPopups();\n  //       })\n  //       .catch((err) => console.log(err));\n  //   }\n\n  //  useEffect(() => {\n  //     api.getCards()\n  //        .then((res) => {\n  //           setCards(res)\n  //        })\n  //        .catch((err) => {\n  //           console.log(err)\n  //        })\n  //  }, []);\n\n  //  function handleAddPlaceSubmit(res) {\n  //     api.createCard(res)\n  //        .then((res) => {\n  //           setCards([res, ...cards]);\n  //           closeAllPopups();\n  //        })\n  //        .catch((err) => console.log(err));\n  //  }\n\n  //  useEffect(() => {\n  //     const jwt = localStorage.getItem('jwt');\n  //     if (jwt) {\n  //        authApi.checkToken()\n  //           .then(data => {\n  //              if (data) {\n  //                 setIsProfileEmail(data.email)\n  //                 setIsLoggedIn(true)\n  //                 historyUse.push('/');\n  //                 console.log(\"Вы уже авторизованы, рады вас видеть снова\")\n  //              }\n  //           })\n  //           .catch(error => { console.log(error) })\n  //     }\n  //  }, [historyUse, isLoggedIn]);\n\n  //  function handleLoginUser(email, password) {\n  //     authApi.loginUser(email, password)\n  //        .then(data => {\n  //           if (data.token) {\n  //              setIsProfileEmail(email)\n  //              setIsLoggedIn(true);\n  //              localStorage.setItem('jwt', data.token);\n  //              historyUse.push('/');\n  //           }\n  //        })\n  //        .catch(error => {\n  //           setIsInfoTooltipPopupOpen(true);\n  //           setIsInfoTooltipSuccess(false);\n  //           console.log(error)\n  //        })\n  //  }\n\n  //  function handleRegisterUser(email, password) {\n  //     authApi.registerUser(email, password)\n  //        .then(data => {\n  //           if (data) {\n  //              setIsInfoTooltipSuccess(true);\n  //              historyUse.push('/sign-in');\n  //           }\n  //        })\n  //        .catch(error => {\n  //           setIsInfoTooltipSuccess(false);\n  //           console.log(error);\n  //        })\n  //        .finally(\n  //           () =>\n  //              setIsInfoTooltipPopupOpen(true)\n  //        );\n  //  }\n\n   const handleLogout = () => {\n      localStorage.removeItem('jwt');\n      setIsProfileEmail('')\n      setIsLoggedIn(false);\n      historyUse.push('/sign-in');\n   }\n\n  return (\n<CurrentUserContext.Provider value={currentUser}>\n         <div className=\"page\">\n            <Header\n              //  isLoggedIn={isLoggedIn}\n              //  isProfileEmail={isProfileEmail}\n              //  onLogout={handleLogout}\n            />\n            <Switch>\n               <ProtectedRoute\n                  exact path=\"/\"\n                  isLoggedIn={isLoggedIn}\n                  component={Main}\n                  // onEditProfile={handleEditProfileClick}\n                  // onAddPlace={handleAddPlaceClick}\n                  // onEditAvatar={handleEditAvatarClick}\n                  // onCardClick={handleCardClick}\n                  // cards={cards}\n                  // onCardLike={handleCardLike}\n                  // onCardDelete={handleCardDeleteClick}\n               />\n               {/* <Route path=\"/sign-up\">\n                  <Register\n                     onRegister={handleRegisterUser}\n                  />\n               </Route> */}\n               {/* <Route path=\"/sign-in\">\n                  <Login\n                     onLogin={handleLoginUser}\n                  />\n               </Route> */}\n               {/* <Route>\n                  {isLoggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/sign-in\" />}\n               </Route> */}\n            </Switch>\n            {/* <Footer /> */}\n            <EditPopup\n            />\n             {/* <AddPopup\n               isOpen={isAddPlacePopupOpen}\n               onClose={closeAllPopups}\n               onAddPlace={handleAddPlaceSubmit}\n            />\n            <ImagePopup\n               card={selectedCard}\n               isOpen={isImagePopupOpen}\n               onClose={closeAllPopups}\n\n            />\n            <DeletePopup\n               card={selectedCard}\n               onDeleteCard={handleCardDelete}\n               isOpen={isDeletePopupOpen}\n               onClose={closeAllPopups}\n            />\n            <AvatarPopup\n               isOpen={isEditAvatarPopupOpen}\n               onClose={closeAllPopups}\n               onUpdateAvatar={handleUpdateAvatar}\n            />\n            <InfoTooltip\n               isOpen={isInfoTooltipPopupOpen}\n               onClose={closeAllPopups}\n               isSuccess={isInfoTooltipSuccess}\n            /> */}\n         </div>\n      </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":"uIAAA,MAAO,CAAAA,MAAM,KAAM,kBAAkB,CACrC,MAAO,CAAAC,IAAI,KAAM,cAAc,CAC/B;AACA,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAC9C;AACA;AACA;AACA,OAASC,QAAQ,KAAQ,OAAO,CAChC,MAAO,WAAW,CAClB;AACA,OAASC,kBAAkB,KAAQ,gCAAgC,CACnE;AACA;AACA,OAASC,KAAK,CAAEC,MAAM,CAAEC,QAAQ,CAAEC,UAAU,KAAQ,kBAAkB,CACtE;AACA,MAAO,CAAAC,cAAc,KAAM,kCAAkC,CAC7D;AACA;AACA;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEA,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,IAAAC,SAAA,CAAsCZ,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAAa,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA3CG,WAAW,CAAAF,UAAA,IAAEG,cAAc,CAAAH,UAAA,IACnC;AACC,IAAAI,UAAA,CAA4CjB,QAAQ,CAAC,EAAE,CAAC,CAAAkB,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAjDE,cAAc,CAAAD,UAAA,IAAEE,iBAAiB,CAAAF,UAAA,IACxC,IAAAG,UAAA,CAAoCrB,QAAQ,CAAC,KAAK,CAAC,CAAAsB,UAAA,CAAAR,cAAA,CAAAO,UAAA,IAA5CE,UAAU,CAAAD,UAAA,IAAEE,aAAa,CAAAF,UAAA,IAEhC,GAAM,CAAAG,UAAU,CAAGpB,UAAU,EAAE,CAEhqB,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAA,CAAS,CACxBC,YAAY,CAACC,UAAU,CAAC,KAAK,CAAC,CAC9BR,iBAAiB,CAAC,EAAE,CAAC,CACrBI,aAAa,CAAC,KAAK,CAAC,CACpBC,UAAU,CAACI,IAAI,CAAC,UAAU,CAAC,CAC9B,CAAC,CAEF,mBACFrB,IAAA,CAACP,kBAAkB,CAAC6B,QAAQ,EAACC,KAAK,CAAEhB,WAAY,CAAAiB,QAAA,cACvCtB,KAAA,QAAKuB,SAAS,CAAC,MAAM,CAAAD,QAAA,eAClBxB,IAAA,CAACX,MACC;AACA;AACA;AAAA,IACA,cACFW,IAAA,CAACL,MAAM,EAAA6B,QAAA,cACJxB,IAAA,CAACF,cAAc,EACZ4B,KAAK,MAACC,IAAI,CAAC,GAAG,CACdZ,UAAU,CAAEA,UAAW,CACvBa,SAAS,CAAEtC,IACX;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,EACD,EAcI,cAETU,IAAA,CAACT,SAAS,IACR,GA4BC,EACqB,CAEpC,CAEA,cAAe,CAAAY,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}