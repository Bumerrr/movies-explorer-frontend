{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\dev\\\\diplom\\\\movies-explorer-frontend\\\\src\\\\components\\\\MoviesCardList\\\\MoviesCardList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./MoviesCardList.css\";\nimport Preloader from \"../../components/Preloader/Preloader\";\nimport MoviesCard from \"../../components/MoviesCard/MoviesCard\";\nimport { GRID_480, GRID_768, GRID_1280, GRID_FULL } from \"../../utils/constants\";\n\n// На роуте saved-movies будет отображаться конкретный блок с карточками\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MoviesCardList = _ref => {\n  _s();\n  let {\n    movies,\n    busy,\n    onLikeMovie,\n    onUnlikeMovie\n  } = _ref;\n  const [page, setPage] = useState(0);\n  const [screenWidth, setScreenWidth] = useState(0);\n  useEffect(() => {\n    window.addEventListener(\"resize\", onResize);\n    onResize();\n    return () => window.removeEventListener(\"resize\", onResize);\n  }, []);\n  const onResize = () => {\n    setScreenWidth(window.outerWidth);\n  };\n  const more = () => {\n    setPage(p => p + 1);\n  };\n  let gridParams = GRID_FULL;\n  if (screenWidth < 480) {\n    gridParams = GRID_480;\n  } else if (screenWidth >= 480 && screenWidth < 768) {\n    gridParams = GRID_768;\n  } else if (screenWidth >= 768 && screenWidth < 1280) {\n    gridParams = GRID_1280;\n  }\n  const {\n    init,\n    perPage\n  } = gridParams;\n  let maxPage = (movies.length - init) / perPage;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: busy ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"moviesgallery\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"moviesgallery__wrapper\",\n        children: movies.slice(0, init + page * perPage).map((_ref2, index) => {\n          let {\n            isLiked,\n            ...item\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(MoviesCard, {\n            onClickMovie: isLiked ? onUnlikeMovie : onLikeMovie,\n            liked: isLiked,\n            ...item\n          }, item.movieId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), maxPage > 0 && page < maxPage ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"moviesgallery__wrapper-button\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: more,\n          className: \"moviesgallery__button-card-more\",\n          children: \"\\u0415\\u0449\\u0451\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(MoviesCardList, \"O1NqNLXZmcnZKyX3ecaA084I+NU=\");\n_c = MoviesCardList;\nexport default MoviesCardList;\nvar _c;\n$RefreshReg$(_c, \"MoviesCardList\");","map":{"version":3,"names":["React","useState","useEffect","Preloader","MoviesCard","GRID_480","GRID_768","GRID_1280","GRID_FULL","jsxDEV","_jsxDEV","Fragment","_Fragment","MoviesCardList","_ref","_s","movies","busy","onLikeMovie","onUnlikeMovie","page","setPage","screenWidth","setScreenWidth","window","addEventListener","onResize","removeEventListener","outerWidth","more","p","gridParams","init","perPage","maxPage","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","slice","map","_ref2","index","isLiked","item","onClickMovie","liked","movieId","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/dev/diplom/movies-explorer-frontend/src/components/MoviesCardList/MoviesCardList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./MoviesCardList.css\";\r\nimport Preloader from \"../../components/Preloader/Preloader\";\r\nimport MoviesCard from \"../../components/MoviesCard/MoviesCard\";\r\nimport { GRID_480, GRID_768, GRID_1280, GRID_FULL } from \"../../utils/constants\";\r\n\r\n// На роуте saved-movies будет отображаться конкретный блок с карточками\r\nconst MoviesCardList = ({ movies, busy, onLikeMovie, onUnlikeMovie }) => {\r\n  const [page, setPage] = useState(0);\r\n  const [screenWidth, setScreenWidth] = useState(0);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", onResize);\r\n    onResize();\r\n\r\n    return () => window.removeEventListener(\"resize\", onResize);\r\n  }, []);\r\n\r\n  const onResize = () => {\r\n    setScreenWidth(window.outerWidth);\r\n  };\r\n\r\n  const more = () => {\r\n    setPage((p) => p + 1);\r\n  };\r\n\r\n  let gridParams = GRID_FULL;\r\n\r\n  if (screenWidth < 480) {\r\n    gridParams = GRID_480;\r\n  } else if (screenWidth >= 480 && screenWidth < 768) {\r\n    gridParams = GRID_768;\r\n  } else if (screenWidth >= 768 && screenWidth < 1280) {\r\n    gridParams = GRID_1280;\r\n  }\r\n\r\n  const { init, perPage } = gridParams;\r\n  let maxPage = (movies.length - init) / perPage;\r\n\r\n  return (\r\n    <>\r\n      {busy ? (\r\n        <Preloader />\r\n      ) : (\r\n        <section className=\"moviesgallery\">\r\n          <ul className=\"moviesgallery__wrapper\">\r\n            {movies\r\n              .slice(0, init + page * perPage)\r\n              .map(({ isLiked, ...item }, index) => (\r\n                <MoviesCard\r\n                  key={item.movieId}\r\n                  onClickMovie={isLiked ? onUnlikeMovie : onLikeMovie}\r\n                  liked={isLiked}\r\n                  {...item}\r\n                />\r\n              ))}\r\n          </ul>\r\n          {maxPage > 0 && page < maxPage ? (\r\n            <div className=\"moviesgallery__wrapper-button\">\r\n              <button\r\n                onClick={more}\r\n                className=\"moviesgallery__button-card-more\"\r\n              >\r\n                Ещё\r\n              </button>\r\n            </div>\r\n          ) : null}\r\n        </section>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoviesCardList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}