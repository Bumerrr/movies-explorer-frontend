{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\dev\\\\diplom\\\\movies-explorer-frontend\\\\src\\\\components\\\\App\\\\App.js\",\n  _s = $RefreshSig$();\nimport Header from '../Header/Header';\nimport Main from '../Main/Main';\nimport Popup from '../Popup/Popup';\nimport NotFound from '../NotFound/NotFound';\nimport SavedMovies from '../SavedMovies/SavedMovies';\nimport Movies from '../Movies/Movies';\nimport Profile from '../Profile/Profile';\nimport EditPopup from '../EditPopup/EditPopup';\nimport { useState, useEffect, useCallback } from 'react';\nimport './App.css';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\n// import { MainApi } from '../../utils/MainApi';\nimport Login from '../Login/Login';\nimport Register from '../Register/Register';\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\nimport MainApi from '../../utils/MainApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = _ref => {\n  _s();\n  let {\n    history\n  } = _ref;\n  const [loggedIn, setLoggedIn] = useState(localStorage.getItem(\"jwt\") !== null);\n  const [currentUser, setCurrentUser] = useState();\n  const [popup, setPopup] = useState();\n  const [externalMovies, setExternalMovies] = useState();\n  const [myMovies, setMyMovies] = useState();\n\n  // Выход\n  const logOut = useCallback(e => {\n    if (e) e.preventDefault();\n    localStorage.removeItem(\"jwt\");\n    setCurrentUser();\n    localStorage.removeItem(\"myMovies\");\n    setMyMovies();\n    localStorage.removeItem(\"externalMovies\");\n    setExternalMovies();\n    localStorage.removeItem(\"externalMoviesSearch\");\n    localStorage.removeItem(\"externalMoviesToggle\");\n    localStorage.removeItem(\"myMoviesSearch\");\n    localStorage.removeItem(\"myMoviesToggle\");\n    setLoggedIn(false);\n    history.push(\"/\");\n    setPopup({\n      type: \"success\",\n      text: \"Вы успешно вышли\"\n    });\n  }, [history]);\n  const getUser = useCallback(jwt => {\n    return MainApi.checkAuth(jwt).then(res => {\n      if (res) {\n        setCurrentUser(res);\n        const savedExternalMovies = JSON.parse(localStorage.getItem(\"externalMovies\"));\n        if (savedExternalMovies && Array.isArray(savedExternalMovies)) {\n          setExternalMovies(savedExternalMovies);\n        }\n        const savedMyMovies = JSON.parse(localStorage.getItem(\"myMovies\"));\n        if (savedMyMovies && Array.isArray(savedMyMovies)) {\n          setMyMovies(savedMyMovies);\n        }\n      }\n    }).catch(err => {\n      logOut();\n      console.log(err);\n    });\n  }, [logOut]);\n  useEffect(() => {\n    const jwt = localStorage.getItem(\"jwt\");\n    if (loggedIn && jwt && !currentUser) {\n      getUser(jwt);\n    }\n  }, [loggedIn, getUser, currentUser]);\n  const error = err => {\n    console.log(err);\n    setPopup({\n      type: \"error\",\n      text: err && err.message ? err.message : \"Произошла ошибка\"\n    });\n  };\n  const handleRegister = (password, email, name) => {\n    return MainApi.register(password, email, name).then(res => {\n      setPopup({\n        type: \"success\",\n        text: \"Вы успешно зарегистрировались\"\n      });\n      history.push(\"/signin\");\n    }).catch(error);\n  };\n\n  // Запрос на логин по паролю и мэйлу\n  const handleLogin = (password, email) => {\n    return new Promise((resolve, reject) => {\n      MainApi.login(password, email).then(res => {\n        if (res && res.token) {\n          getUser(res.token).then(usr => {\n            localStorage.setItem(\"jwt\", res.token);\n            setLoggedIn(true);\n            setPopup({\n              type: \"success\",\n              text: \"Вы успешно вошли\"\n            });\n            history.push(\"/movies\");\n            resolve();\n          }).catch(err => {\n            error(err);\n            reject();\n          });\n        }\n      }).catch(err => {\n        error(err);\n        reject();\n      });\n    });\n  };\n  const handleUpdateUser = data => {\n    return MainApi.setUser(data).then(data => {\n      setCurrentUser(data);\n      setPopup({\n        type: \"success\",\n        text: \"Профиль успешно сохранен\"\n      });\n    }).catch(error);\n  };\n  const handlerCreateMovie = data => {\n    MainApi.createMovie(data).then(res => {\n      setMyMovies(m => {\n        m.push(res);\n        localStorage.setItem(\"myMovies\", JSON.stringify(m));\n        return [...m];\n      });\n      setPopup({\n        type: \"success\",\n        text: \"Фильм успешно сохранен\"\n      });\n    }).catch(error);\n  };\n  const handlerDeleteMovie = id => {\n    MainApi.deleteMovie(id).then(() => {\n      setMyMovies(m => {\n        m = m.filter(f => f._id !== id);\n        localStorage.setItem(\"myMovies\", JSON.stringify(m));\n        return [...m];\n      });\n      setPopup({\n        type: \"success\",\n        text: \"Фильм успешно удален\"\n      });\n    }).catch(error);\n  };\n  const getExternalMovies = () => {\n    return new Promise((resolve, reject) => {\n      const saved = JSON.parse(localStorage.getItem(\"externalMovies\"));\n      if (saved && Array.isArray(saved)) {\n        resolve(saved);\n      } else {\n        MainApi.getMovies().then(res => {\n          localStorage.setItem(\"externalMovies\", JSON.stringify(res));\n          resolve(res);\n        }).catch(err => {\n          error(err);\n          reject();\n        });\n      }\n    });\n  };\n  const getMyMovies = () => {\n    return new Promise((resolve, reject) => {\n      const saved = JSON.parse(localStorage.getItem(\"myMovies\"));\n      if (saved && Array.isArray(saved)) {\n        resolve(saved);\n      } else {\n        MainApi.getMovies().then(res => {\n          localStorage.setItem(\"myMovies\", JSON.stringify(res));\n          resolve(res);\n        }).catch(err => {\n          error(err);\n          reject();\n        });\n      }\n    });\n  };\n  if (loggedIn && !currentUser) return null;\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: [popup ? /*#__PURE__*/_jsxDEV(Popup, {\n      ...popup,\n      onClose: () => setPopup()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/signup\",\n          children: /*#__PURE__*/_jsxDEV(Register, {\n            onRegiter: handleRegister\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/signin\",\n          children: /*#__PURE__*/_jsxDEV(Login, {\n            onLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/movies\",\n          isLoginned: loggedIn,\n          children: /*#__PURE__*/_jsxDEV(Movies, {\n            onCreateMovie: handlerCreateMovie,\n            onDeleteMovie: handlerDeleteMovie,\n            externalMovies: externalMovies,\n            setExternalMovies: setExternalMovies,\n            myMovies: myMovies,\n            setMyMovies: setMyMovies,\n            getExternalMovies: getExternalMovies,\n            getMyMovies: getMyMovies\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/saved-movies\",\n          isLoginned: loggedIn,\n          children: /*#__PURE__*/_jsxDEV(SavedMovies, {\n            onDeleteMovie: handlerDeleteMovie,\n            myMovies: myMovies,\n            setMyMovies: setMyMovies,\n            getMyMovies: getMyMovies\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/profile\",\n          isLoginned: loggedIn,\n          children: /*#__PURE__*/_jsxDEV(Profile, {\n            logOut: logOut,\n            onUpdateUser: handleUpdateUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          children: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 6\n  }, this);\n};\n\n// function App() {\n//   // const [cards, setCards] = useState([]);\n//   //  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n//   //  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n//   //  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n//   //  const [isInfoTooltipPopupOpen, setIsInfoTooltipPopupOpen] = useState(false);\n//   //  const [selectedCard, setSelectedCard] = useState({ name: '', link: '' });\n//   //  const [isImagePopupOpen, setImagePopupOpen] = useState(false);\n//   //  const [isDeletePopupOpen, setDeleteCardPopupOpen] = useState(false);\n//    const [currentUser, setCurrentUser] = useState({});\n//   //  const [isInfoTooltipSuccess, setIsInfoTooltipSuccess] = useState(false);\n//    const [isProfileEmail, setIsProfileEmail] = useState('')\n//    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n//    const historyUse = useHistory();\n\n//    const handleLogout = () => {\n//       localStorage.removeItem('jwt');\n//       setIsProfileEmail('')\n//       setIsLoggedIn(false);\n//       historyUse.push('/sign-in');\n//    }\n\n//   return (\n// <CurrentUserContext.Provider value={currentUser}>\n//          <div className=\"page\">\n//             <Switch>\n//             <Route path='/' exact>\n//                 <Main />\n//               </Route>\n//                <Route path=\"/sign-up\">\n//                   <Register\n//                      // onRegister={handleRegisterUser}\n//                   />\n//                </Route>\n//                 <Route path=\"/sign-in\">\n//                   <Login\n//                      // onLogin={handleLoginUser}\n//                   />\n//                </Route>\n\n//                </Switch>\n//          </div>\n//       </CurrentUserContext.Provider>\n//   );\n// }\n_s(App, \"v40wwY5hwUOjL+0BBLIskB65mG0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","Main","Popup","NotFound","SavedMovies","Movies","Profile","EditPopup","useState","useEffect","useCallback","CurrentUserContext","Login","Register","Route","Switch","Redirect","useHistory","ProtectedRoute","MainApi","jsxDEV","_jsxDEV","App","_ref","_s","history","loggedIn","setLoggedIn","localStorage","getItem","currentUser","setCurrentUser","popup","setPopup","externalMovies","setExternalMovies","myMovies","setMyMovies","logOut","e","preventDefault","removeItem","push","type","text","getUser","jwt","checkAuth","then","res","savedExternalMovies","JSON","parse","Array","isArray","savedMyMovies","catch","err","console","log","error","message","handleRegister","password","email","name","register","handleLogin","Promise","resolve","reject","login","token","usr","setItem","handleUpdateUser","data","setUser","handlerCreateMovie","createMovie","m","stringify","handlerDeleteMovie","id","deleteMovie","filter","f","_id","getExternalMovies","saved","getMovies","getMyMovies","Provider","value","children","onClose","fileName","_jsxFileName","lineNumber","columnNumber","className","exact","path","onRegiter","onLogin","isLoginned","onCreateMovie","onDeleteMovie","onUpdateUser","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/dev/diplom/movies-explorer-frontend/src/components/App/App.js"],"sourcesContent":["import Header from '../Header/Header';\nimport Main from '../Main/Main';\nimport Popup from '../Popup/Popup';\nimport NotFound from '../NotFound/NotFound';\nimport SavedMovies from '../SavedMovies/SavedMovies';\nimport Movies from '../Movies/Movies';\nimport Profile from '../Profile/Profile';\nimport EditPopup from '../EditPopup/EditPopup';\nimport { useState, useEffect, useCallback } from 'react';\nimport './App.css';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\n// import { MainApi } from '../../utils/MainApi';\nimport Login from '../Login/Login';\nimport Register from '../Register/Register';\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\nimport MainApi from '../../utils/MainApi';\n\nconst App = ({ history }) => {\n   const [loggedIn, setLoggedIn] = useState(localStorage.getItem(\"jwt\") !== null);\n   const [currentUser, setCurrentUser] = useState();\n   const [popup, setPopup] = useState();\n   const [externalMovies, setExternalMovies] = useState();\n   const [myMovies, setMyMovies] = useState();\n \n   // Выход\n   const logOut = useCallback((e) => {\n     if (e) e.preventDefault();\n \n     localStorage.removeItem(\"jwt\");\n     setCurrentUser();\n     localStorage.removeItem(\"myMovies\");\n     setMyMovies();\n     localStorage.removeItem(\"externalMovies\");\n     setExternalMovies();\n \n     localStorage.removeItem(\"externalMoviesSearch\");\n     localStorage.removeItem(\"externalMoviesToggle\");\n     localStorage.removeItem(\"myMoviesSearch\");\n     localStorage.removeItem(\"myMoviesToggle\");\n     \n     setLoggedIn(false);\n     history.push(\"/\");\n     setPopup({ type: \"success\", text: \"Вы успешно вышли\" });\n   }, [history]);\n \n   const getUser = useCallback(\n     (jwt) => {\n       return MainApi.checkAuth(jwt)\n         .then((res) => {\n           if (res) {\n             setCurrentUser(res);\n \n             const savedExternalMovies = JSON.parse(\n               localStorage.getItem(\"externalMovies\")\n             );\n             if (savedExternalMovies && Array.isArray(savedExternalMovies)) {\n               setExternalMovies(savedExternalMovies);\n             }\n \n             const savedMyMovies = JSON.parse(localStorage.getItem(\"myMovies\"));\n             if (savedMyMovies && Array.isArray(savedMyMovies)) {\n               setMyMovies(savedMyMovies);\n             }\n           }\n         })\n         .catch((err) => {\n           logOut();\n           console.log(err);\n         });\n     },\n     [logOut]\n   );\n \n   useEffect(() => {\n     const jwt = localStorage.getItem(\"jwt\");\n \n     if (loggedIn && jwt && !currentUser) {\n       getUser(jwt);\n     }\n   }, [loggedIn, getUser, currentUser]);\n \n   const error = (err) => {\n     console.log(err);\n     setPopup({\n       type: \"error\",\n       text: err && err.message ? err.message : \"Произошла ошибка\",\n     });\n   };\n \n   const handleRegister = (password, email, name) => {\n     return MainApi.register(password, email, name)\n       .then((res) => {\n         setPopup({ type: \"success\", text: \"Вы успешно зарегистрировались\" });\n         history.push(\"/signin\");\n       })\n       .catch(error);\n   };\n \n   // Запрос на логин по паролю и мэйлу\n   const handleLogin = (password, email) => {\n     return new Promise((resolve, reject) => {\n       MainApi.login(password, email)\n         .then((res) => {\n           if (res && res.token) {\n             getUser(res.token)\n               .then((usr) => {\n                 localStorage.setItem(\"jwt\", res.token);\n                 setLoggedIn(true);\n                 setPopup({ type: \"success\", text: \"Вы успешно вошли\" });\n                 history.push(\"/movies\");\n \n                 resolve();\n               })\n               .catch((err) => {\n                 error(err);\n                 reject();\n               });\n           }\n         })\n         .catch((err) => {\n           error(err);\n           reject();\n         });\n     });\n   };\n \n   const handleUpdateUser = (data) => {\n     return MainApi.setUser(data)\n       .then((data) => {\n         setCurrentUser(data);\n         setPopup({ type: \"success\", text: \"Профиль успешно сохранен\" });\n       })\n       .catch(error);\n   };\n \n   const handlerCreateMovie = (data) => {\n     MainApi.createMovie(data)\n       .then((res) => {\n         setMyMovies((m) => {\n           m.push(res);\n           localStorage.setItem(\"myMovies\", JSON.stringify(m));\n           return [...m];\n         });\n         setPopup({ type: \"success\", text: \"Фильм успешно сохранен\" });\n       })\n       .catch(error);\n   };\n \n   const handlerDeleteMovie = (id) => {\n     MainApi.deleteMovie(id)\n       .then(() => {\n         setMyMovies((m) => {\n           m = m.filter((f) => f._id !== id);\n           localStorage.setItem(\"myMovies\", JSON.stringify(m));\n           return [...m];\n         });\n         setPopup({ type: \"success\", text: \"Фильм успешно удален\" });\n       })\n       .catch(error);\n   };\n \n   const getExternalMovies = () => {\n     return new Promise((resolve, reject) => {\n       const saved = JSON.parse(localStorage.getItem(\"externalMovies\"));\n \n       if (saved && Array.isArray(saved)) {\n         resolve(saved);\n       } else {\n         MainApi.getMovies()\n           .then((res) => {\n             localStorage.setItem(\"externalMovies\", JSON.stringify(res));\n             resolve(res);\n           })\n           .catch((err) => {\n             error(err);\n             reject();\n           });\n       }\n     });\n   };\n \n   const getMyMovies = () => {\n     return new Promise((resolve, reject) => {\n       const saved = JSON.parse(localStorage.getItem(\"myMovies\"));\n \n       if (saved && Array.isArray(saved)) {\n         resolve(saved);\n       } else {\n         MainApi.getMovies()\n           .then((res) => {\n             localStorage.setItem(\"myMovies\", JSON.stringify(res));\n             resolve(res);\n           })\n           .catch((err) => {\n             error(err);\n             reject();\n           });\n       }\n     });\n   };\n \n   if (loggedIn && !currentUser) return null;\n \n   return (\n     <CurrentUserContext.Provider value={currentUser}>\n       {popup ? <Popup {...popup} onClose={() => setPopup()} /> : null}\n       <div className=\"page\">\n         <Switch>\n           <Route exact path=\"/\">\n             <Main />\n           </Route>\n \n           <Route exact path=\"/signup\">\n             <Register onRegiter={handleRegister} />\n           </Route>\n \n           <Route exact path=\"/signin\">\n             <Login onLogin={handleLogin} />\n           </Route>\n \n           <ProtectedRoute exact path=\"/movies\" isLoginned={loggedIn}>\n             <Movies\n               onCreateMovie={handlerCreateMovie}\n               onDeleteMovie={handlerDeleteMovie}\n               externalMovies={externalMovies}\n               setExternalMovies={setExternalMovies}\n               myMovies={myMovies}\n               setMyMovies={setMyMovies}\n               getExternalMovies={getExternalMovies}\n               getMyMovies={getMyMovies}\n             />\n           </ProtectedRoute>\n \n           <ProtectedRoute exact path=\"/saved-movies\" isLoginned={loggedIn}>\n             <SavedMovies\n               onDeleteMovie={handlerDeleteMovie}\n               myMovies={myMovies}\n               setMyMovies={setMyMovies}\n               getMyMovies={getMyMovies}\n             />\n           </ProtectedRoute>\n \n           <ProtectedRoute exact path=\"/profile\" isLoginned={loggedIn}>\n             <Profile logOut={logOut} onUpdateUser={handleUpdateUser} />\n           </ProtectedRoute>\n \n           <Route path=\"*\">\n             <NotFound />\n           </Route>\n         </Switch>\n       </div>\n     </CurrentUserContext.Provider>\n   );\n };\n\n// function App() {\n//   // const [cards, setCards] = useState([]);\n//   //  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n//   //  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n//   //  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n//   //  const [isInfoTooltipPopupOpen, setIsInfoTooltipPopupOpen] = useState(false);\n//   //  const [selectedCard, setSelectedCard] = useState({ name: '', link: '' });\n//   //  const [isImagePopupOpen, setImagePopupOpen] = useState(false);\n//   //  const [isDeletePopupOpen, setDeleteCardPopupOpen] = useState(false);\n//    const [currentUser, setCurrentUser] = useState({});\n//   //  const [isInfoTooltipSuccess, setIsInfoTooltipSuccess] = useState(false);\n//    const [isProfileEmail, setIsProfileEmail] = useState('')\n//    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n//    const historyUse = useHistory();\n\n\n//    const handleLogout = () => {\n//       localStorage.removeItem('jwt');\n//       setIsProfileEmail('')\n//       setIsLoggedIn(false);\n//       historyUse.push('/sign-in');\n//    }\n\n//   return (\n// <CurrentUserContext.Provider value={currentUser}>\n//          <div className=\"page\">\n//             <Switch>\n//             <Route path='/' exact>\n//                 <Main />\n//               </Route>\n//                <Route path=\"/sign-up\">\n//                   <Register\n//                      // onRegister={handleRegisterUser}\n//                   />\n//                </Route>\n//                 <Route path=\"/sign-in\">\n//                   <Login\n//                      // onLogin={handleLoginUser}\n//                   />\n//                </Route>\n               \n//                </Switch>\n//          </div>\n//       </CurrentUserContext.Provider>\n//   );\n// }\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}